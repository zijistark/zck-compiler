/* -*- C++ -*- vim: set syntax=cpp:
 * PURPOSE: File containing definition of token-identifier and
 *          a function that maps token identifiers to a string
 *          name.
 *
 * NOTE: This file has been created automatically by Quex.
 *       Visit quex.org for further info.
 *
 * DATE: Wed Oct  4 15:15:25 2017
 *
 * (C) 2005-2010 Frank-Rene Schaefer
 * ABSOLUTELY NO WARRANTY                                                     */
#ifndef __QUEX_INCLUDE_GUARD__AUTO_TOKEN_IDS_QUEX_LEXER__QUEX_TOKEN__
#define __QUEX_INCLUDE_GUARD__AUTO_TOKEN_IDS_QUEX_LEXER__QUEX_TOKEN__

#ifndef __QUEX_OPTION_PLAIN_C
#   include<cstdio> 
#else
#   include<stdio.h> 
#endif

/* Note: When multiple lexical analyzers are included, then their
 *       token prefix must differ! Use '--token-id-prefix'.                   */
const QUEX_TYPE_TOKEN_ID TK_BLOCK         = ((QUEX_TYPE_TOKEN_ID)32768);
const QUEX_TYPE_TOKEN_ID TK_CHAR_SCOPE    = ((QUEX_TYPE_TOKEN_ID)135);
const QUEX_TYPE_TOKEN_ID TK_CLOSE_BRACE   = ((QUEX_TYPE_TOKEN_ID)257);
const QUEX_TYPE_TOKEN_ID TK_DATE          = ((QUEX_TYPE_TOKEN_ID)132);
const QUEX_TYPE_TOKEN_ID TK_DECIMAL       = ((QUEX_TYPE_TOKEN_ID)131);
const QUEX_TYPE_TOKEN_ID TK_DEDENT        = ((QUEX_TYPE_TOKEN_ID)10000);
const QUEX_TYPE_TOKEN_ID TK_FAILURE       = ((QUEX_TYPE_TOKEN_ID)1);
const QUEX_TYPE_TOKEN_ID TK_INDENT        = ((QUEX_TYPE_TOKEN_ID)10001);
const QUEX_TYPE_TOKEN_ID TK_INTEGER       = ((QUEX_TYPE_TOKEN_ID)130);
const QUEX_TYPE_TOKEN_ID TK_KW_FROM       = ((QUEX_TYPE_TOKEN_ID)260);
const QUEX_TYPE_TOKEN_ID TK_KW_PREV       = ((QUEX_TYPE_TOKEN_ID)262);
const QUEX_TYPE_TOKEN_ID TK_KW_ROOT       = ((QUEX_TYPE_TOKEN_ID)259);
const QUEX_TYPE_TOKEN_ID TK_KW_ROOTFROM   = ((QUEX_TYPE_TOKEN_ID)261);
const QUEX_TYPE_TOKEN_ID TK_KW_THIS       = ((QUEX_TYPE_TOKEN_ID)258);
const QUEX_TYPE_TOKEN_ID TK_LIST          = ((QUEX_TYPE_TOKEN_ID)32769);
const QUEX_TYPE_TOKEN_ID TK_NODENT        = ((QUEX_TYPE_TOKEN_ID)10002);
const QUEX_TYPE_TOKEN_ID TK_OPEN_BRACE    = ((QUEX_TYPE_TOKEN_ID)256);
const QUEX_TYPE_TOKEN_ID TK_OP_DEQ        = ((QUEX_TYPE_TOKEN_ID)24);
const QUEX_TYPE_TOKEN_ID TK_OP_EQ         = ((QUEX_TYPE_TOKEN_ID)16);
const QUEX_TYPE_TOKEN_ID TK_OP_GT         = ((QUEX_TYPE_TOKEN_ID)27);
const QUEX_TYPE_TOKEN_ID TK_OP_GTEQ       = ((QUEX_TYPE_TOKEN_ID)28);
const QUEX_TYPE_TOKEN_ID TK_OP_LT         = ((QUEX_TYPE_TOKEN_ID)25);
const QUEX_TYPE_TOKEN_ID TK_OP_LTEQ       = ((QUEX_TYPE_TOKEN_ID)26);
const QUEX_TYPE_TOKEN_ID TK_QDATE         = ((QUEX_TYPE_TOKEN_ID)133);
const QUEX_TYPE_TOKEN_ID TK_QSTRING       = ((QUEX_TYPE_TOKEN_ID)129);
const QUEX_TYPE_TOKEN_ID TK_STRING        = ((QUEX_TYPE_TOKEN_ID)128);
const QUEX_TYPE_TOKEN_ID TK_TERMINATION   = ((QUEX_TYPE_TOKEN_ID)0);
const QUEX_TYPE_TOKEN_ID TK_TITLE_ID      = ((QUEX_TYPE_TOKEN_ID)134);
const QUEX_TYPE_TOKEN_ID TK_UNINITIALIZED = ((QUEX_TYPE_TOKEN_ID)10003);


#endif /* __QUEX_INCLUDE_GUARD__AUTO_TOKEN_IDS_QUEX_LEXER__QUEX_TOKEN__        */
