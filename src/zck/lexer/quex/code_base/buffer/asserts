/* -*- C++ -*- vim: set syntax=cpp: */
#ifndef __QUEX_INCLUDE_GUARD__BUFFER__ASSERTS
#define __QUEX_INCLUDE_GUARD__BUFFER__ASSERTS

#ifndef QUEX_OPTION_ASSERTS

#define QUEX_ASSERT_BUFFER_INVARIANCE_SETUP(BI, ME)       /* empty */    
#define QUEX_ASSERT_BUFFER_INVARIANCE_VERIFY(BI, ME)      /* empty */    
#define QUEX_ASSERT_BUFFER_INVARIANCE_VERIFY_SAME(BI, ME) /* empty */    
#define QUEX_BUFFER_ASSERT_pointers_in_range(ME)          /* empty */
#define QUEX_BUFFER_ASSERT_CONSISTENCY(ME)                /* empty */

#else
#    include <quex/code_base/definitions>
#    include <quex/code_base/buffer/Buffer>

QUEX_NAMESPACE_MAIN_OPEN

#define QUEX_ASSERT_BUFFER_INVARIANCE_SETUP(BI, ME)           \
        QUEX_NAME(BufferInvariance) (BI);                     \
        QUEX_NAME(BufferInvariance_construct)(&(BI), (ME));   \
        (void)bi;                                             \
        QUEX_BUFFER_ASSERT_CONSISTENCY(ME);

#define QUEX_ASSERT_BUFFER_INVARIANCE_VERIFY(BI, ME)          \
        QUEX_BUFFER_ASSERT_CONSISTENCY(ME);                   \
        QUEX_NAME(BufferInvariance_assert)(&(BI), (ME), false);

#define QUEX_ASSERT_BUFFER_INVARIANCE_VERIFY_SAME(BI, ME)     \
        QUEX_BUFFER_ASSERT_CONSISTENCY(ME);                   \
        QUEX_NAME(BufferInvariance_assert)(&(BI), (ME), true);

#define QUEX_BUFFER_ASSERT_pointers_in_range    QUEX_NAME(BUFFER_ASSERT_pointers_in_range_core)
#define QUEX_BUFFER_ASSERT_limit_codes_in_place QUEX_NAME(BUFFER_ASSERT_limit_codes_in_place_core)
#define QUEX_BUFFER_ASSERT_CONSISTENCY          QUEX_NAME(BUFFER_ASSERT_CONSISTENCY_core)
#define QUEX_BUFFER_ASSERT_NO_BUFFER_LIMIT_CODE QUEX_NAME(BUFFER_ASSERT_NO_BUFFER_LIMIT_CODE_core)

QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_pointers_in_range_core)(const QUEX_NAME(Buffer)* B);                 
QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_limit_codes_in_place_core)(const QUEX_NAME(Buffer)* B);
QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_CONSISTENCY_core)(const QUEX_NAME(Buffer)* B);                                            
QUEX_INLINE void QUEX_NAME(BUFFER_ASSERT_NO_BUFFER_LIMIT_CODE_core)(const QUEX_TYPE_LEXATOM* Begin, 
                                                                     const QUEX_TYPE_LEXATOM* End);

QUEX_NAMESPACE_MAIN_CLOSE

#endif

#endif /* __QUEX_INCLUDE_GUARD__BUFFER__ASSERTS */
